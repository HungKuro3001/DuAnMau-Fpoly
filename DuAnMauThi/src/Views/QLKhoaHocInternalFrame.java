/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import EduSys.entity.ChuyenDe;
import EduSys.entity.KhoaHoc;
import EduSys.entity.NhanVien;
import EduSys.utils.Auth;
import EduSys.utils.Msgbox;
import EduSysDAO.ChuyenDeDAO;
import EduSysDAO.KhoaHocDAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class QLKhoaHocInternalFrame extends javax.swing.JInternalFrame {

    private ChuyenDeDAO daoChuyenDe = new ChuyenDeDAO();
    private KhoaHocDAO daoKhoaHoc = new KhoaHocDAO();
    private List<ChuyenDe> listChuyenDe = daoChuyenDe.selectAll();
    private List<KhoaHoc> listKhoaHoc;
    private int row = -1;

    /**
     * Creates new form QLKhoaHocInternalFrame
     */
    public QLKhoaHocInternalFrame() throws ParseException {
        initComponents();
        fillComboBoxChuyenDe();
        txtMaNV.setText(Auth.user.getMaNV());

        txtNgayTao.setText(java.time.LocalDate.now() + "");
        if (!Auth.isManager()) {
            btnDelete.setVisible(false);
            btnXoaHan.setVisible(false);
        }
        btnKhoiPhuc.setVisible(false);
        btnKhoaHocHT.setVisible(false);
    }

    public void fillComboBoxChuyenDe() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChuyenDe.getModel();
        model.removeAllElements();
        for (ChuyenDe chuyenDe : listChuyenDe) {
            cboChuyenDe.addItem(chuyenDe);
        }
    }

    public void fillTableKhoaHoc(String maCd, String IDlist) {
        try {
            listKhoaHoc = daoKhoaHoc.selectByChuyenDe(maCd, IDlist);
            DefaultTableModel modelTable = (DefaultTableModel) tblKhoaHoc.getModel();
            modelTable.setRowCount(0);
            for (KhoaHoc khoaHoc : listKhoaHoc) {
                Object[] row = {khoaHoc.getMaKH(), khoaHoc.getMaCD(), khoaHoc.getThoiLuong(),
                    khoaHoc.getHocPhi(), khoaHoc.getNgayKG(), khoaHoc.getMaNV(), khoaHoc.getNgayTao()
                };
                modelTable.addRow(row);
            }

        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        pnlList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        btnKhoiPhuc = new javax.swing.JToggleButton();
        btnXoaHan = new javax.swing.JLabel();
        btnKhoaHocHT = new javax.swing.JToggleButton();
        btnKhoaHocDaXoa = new javax.swing.JToggleButton();
        pnlEdit = new javax.swing.JPanel();
        lblChuyenDe = new javax.swing.JLabel();
        lblHocPhi = new javax.swing.JLabel();
        txtHocPhi = new javax.swing.JTextField();
        lblMaNV = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        lblGhiChu = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnInsert = new javax.swing.JLabel();
        lblNgayKG = new javax.swing.JLabel();
        lblThoiLuong = new javax.swing.JLabel();
        lblNgayTao = new javax.swing.JLabel();
        txtNgayKG = new javax.swing.JTextField();
        txtThoiLuong = new javax.swing.JTextField();
        txtNgayTao = new javax.swing.JTextField();
        txtChuyenDe = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JLabel();
        btnDelete = new javax.swing.JLabel();
        btnClear = new javax.swing.JLabel();
        btnfisrt = new javax.swing.JLabel();
        btnPrev = new javax.swing.JLabel();
        btnNext = new javax.swing.JLabel();
        BtnLast = new javax.swing.JLabel();
        cboChuyenDe = new javax.swing.JComboBox<>();
        lblTitle = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabs.setBackground(new java.awt.Color(153, 204, 255));

        pnlList.setBackground(new java.awt.Color(102, 102, 255));

        tblKhoaHoc.setBackground(new java.awt.Color(54, 33, 89));
        tblKhoaHoc.setForeground(new java.awt.Color(255, 255, 255));
        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ KH", "CHUYÊN ĐỀ", "THỜI LƯỢNG", "HỌC PHÍ", "KHAI GIẢNG", "TẠO BỞI", "NGÀY TẠO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhoaHoc);

        btnKhoiPhuc.setText("Khôi phục khóa học");
        btnKhoiPhuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhoiPhucActionPerformed(evt);
            }
        });

        btnXoaHan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/trash2.png"))); // NOI18N
        btnXoaHan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaHanMouseClicked(evt);
            }
        });

        btnKhoaHocHT.setText("Khóa học hiện tại");
        btnKhoaHocHT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKhoaHocHTMouseClicked(evt);
            }
        });

        btnKhoaHocDaXoa.setText("Khóa học đã xóa");
        btnKhoaHocDaXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKhoaHocDaXoaMouseClicked(evt);
            }
        });
        btnKhoaHocDaXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhoaHocDaXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnKhoiPhuc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKhoaHocHT)
                        .addGap(18, 18, 18)
                        .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnXoaHan, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                                .addComponent(btnKhoaHocDaXoa)
                                .addGap(79, 79, 79)))))
                .addContainerGap())
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnXoaHan)
                    .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnKhoaHocDaXoa)
                        .addComponent(btnKhoaHocHT)
                        .addComponent(btnKhoiPhuc)))
                .addGap(26, 26, 26))
        );

        tabs.addTab("DANH SÁCH", pnlList);

        pnlEdit.setBackground(new java.awt.Color(54, 33, 89));
        pnlEdit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblChuyenDe.setForeground(new java.awt.Color(255, 255, 255));
        lblChuyenDe.setText("Chuyên đề");
        pnlEdit.add(lblChuyenDe, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        lblHocPhi.setForeground(new java.awt.Color(255, 255, 255));
        lblHocPhi.setText("Học phí");
        pnlEdit.add(lblHocPhi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 62, -1, -1));

        txtHocPhi.setEditable(false);
        txtHocPhi.setBackground(new java.awt.Color(54, 33, 89));
        txtHocPhi.setForeground(new java.awt.Color(255, 255, 255));
        pnlEdit.add(txtHocPhi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 82, 147, -1));

        lblMaNV.setForeground(new java.awt.Color(255, 255, 255));
        lblMaNV.setText("Người tạo");
        pnlEdit.add(lblMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 108, -1, -1));

        txtMaNV.setEditable(false);
        txtMaNV.setBackground(new java.awt.Color(54, 33, 89));
        txtMaNV.setForeground(new java.awt.Color(255, 255, 255));
        pnlEdit.add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 128, 147, -1));

        lblGhiChu.setForeground(new java.awt.Color(255, 255, 255));
        lblGhiChu.setText("Ghi chú");
        pnlEdit.add(lblGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 159, -1, -1));

        txtGhiChu.setBackground(new java.awt.Color(54, 33, 89));
        txtGhiChu.setColumns(20);
        txtGhiChu.setForeground(new java.awt.Color(255, 255, 255));
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        pnlEdit.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 179, 531, -1));

        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/more.png"))); // NOI18N
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertMouseClicked(evt);
            }
        });
        pnlEdit.add(btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 50, 30));

        lblNgayKG.setForeground(new java.awt.Color(255, 255, 255));
        lblNgayKG.setText("Ngày khai giảng");
        pnlEdit.add(lblNgayKG, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 11, -1, -1));

        lblThoiLuong.setForeground(new java.awt.Color(255, 255, 255));
        lblThoiLuong.setText("Thời lượng (giờ)");
        pnlEdit.add(lblThoiLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 62, -1, -1));

        lblNgayTao.setForeground(new java.awt.Color(255, 255, 255));
        lblNgayTao.setText("Ngày tạo");
        pnlEdit.add(lblNgayTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 108, -1, -1));

        txtNgayKG.setBackground(new java.awt.Color(54, 33, 89));
        txtNgayKG.setForeground(new java.awt.Color(255, 255, 255));
        pnlEdit.add(txtNgayKG, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 31, 358, -1));

        txtThoiLuong.setEditable(false);
        txtThoiLuong.setBackground(new java.awt.Color(54, 33, 89));
        txtThoiLuong.setForeground(new java.awt.Color(255, 255, 255));
        pnlEdit.add(txtThoiLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 82, 360, -1));

        txtNgayTao.setEditable(false);
        txtNgayTao.setBackground(new java.awt.Color(54, 33, 89));
        txtNgayTao.setForeground(new java.awt.Color(255, 255, 255));
        pnlEdit.add(txtNgayTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 128, 360, -1));

        txtChuyenDe.setEditable(false);
        txtChuyenDe.setBackground(new java.awt.Color(54, 33, 89));
        txtChuyenDe.setForeground(new java.awt.Color(255, 255, 255));
        pnlEdit.add(txtChuyenDe, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 31, 147, -1));

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-update.png"))); // NOI18N
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        pnlEdit.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/trash2.png"))); // NOI18N
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });
        pnlEdit.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, -1, -1));

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/new (1).png"))); // NOI18N
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });
        pnlEdit.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 70, 40));

        btnfisrt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/first.png"))); // NOI18N
        btnfisrt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnfisrtMouseClicked(evt);
            }
        });
        pnlEdit.add(btnfisrt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, -1, -1));

        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/prebutton.png"))); // NOI18N
        btnPrev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPrevMouseClicked(evt);
            }
        });
        pnlEdit.add(btnPrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, -1, -1));

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next-button.png"))); // NOI18N
        btnNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNextMouseClicked(evt);
            }
        });
        pnlEdit.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, -1, -1));

        BtnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/lastButton.png"))); // NOI18N
        BtnLast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnLastMouseClicked(evt);
            }
        });
        pnlEdit.add(BtnLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, -1, -1));

        tabs.addTab("CẬP NHẬT", pnlEdit);

        getContentPane().add(tabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 380));

        cboChuyenDe.setBackground(new java.awt.Color(110, 89, 222));
        cboChuyenDe.setForeground(new java.awt.Color(102, 0, 153));
        cboChuyenDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lập trình Java cơ bản", "Lập trình mạng máy tính" }));
        cboChuyenDe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChuyenDeItemStateChanged(evt);
            }
        });
        getContentPane().add(cboChuyenDe, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 550, -1));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(153, 0, 153));
        lblTitle.setText("QUẢN LÍ KHÓA HỌC");
        getContentPane().add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 11, 278, 22));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoaHocMouseClicked
        row = tblKhoaHoc.getSelectedRow();
//        System.out.println(row);
        KhoaHoc kh = listKhoaHoc.get(row);
        if (evt.getClickCount() == 2) {
            setForm(kh);
            tabs.setSelectedIndex(1);
            btnInsert.setVisible(false);
        }

    }//GEN-LAST:event_tblKhoaHocMouseClicked

    private void btnInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseClicked
        if (txtNgayKG.getText().length() == 0) {
            Msgbox.alert(this, "Không để trống ngày khai giảng");
            return;
        }
        try {
            SimpleDateFormat formater = new SimpleDateFormat();
            formater.applyPattern("yyyy-MM-dd");

            Date date = formater.parse(txtNgayKG.getText());
            Date ngaytao = formater.parse(txtNgayTao.getText());
            Date NgayToiDa = formater.parse("9999-99-99");
            if ((ngaytao.compareTo(date) >= 0)) {
                Msgbox.alert(this, "Ngày khai giảng phải lớn hơn ngày tạo ");
                return;
            }
            if (!(NgayToiDa.compareTo(date) > 0)) {
                Msgbox.alert(this, "Ngày khai giảng quá lớn ");
                return;
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Ngày theo định dạng:yyyy-MM-dd ");
            return;
        }
        if (txtMaNV.getText().length() == 0) {
            Msgbox.alert(this, "Không để trống mã nhân viên");
            return;
        }
        insert();
    }//GEN-LAST:event_btnInsertMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        try {
            SimpleDateFormat formater = new SimpleDateFormat();
            formater.applyPattern("yyyy-MM-dd");

            Date date = formater.parse(txtNgayKG.getText());
            Date ngaytao = formater.parse(txtNgayTao.getText());
            Date NgayToiDa = formater.parse("9999-99-99");
            if ((ngaytao.compareTo(date) >= 0)) {
                Msgbox.alert(this, "Ngày khai giảng phải lớn hơn ngày tạo ");
                return;
            }
            if (!(NgayToiDa.compareTo(date) > 0)) {
                Msgbox.alert(this, "Ngày khai giảng quá lớn ");
                return;
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Ngày theo định dạng:yyyy-MM-dd ");
            return;
        }
        if (txtMaNV.getText().length() == 0) {
            Msgbox.alert(this, "Không để trống mã nhân viên");
            return;
        }
        update();
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        int dong = tblKhoaHoc.getSelectedRow();
        if (dong < 0) {
            Msgbox.alert(this, "Chọn khóa học để xóa");
            return;
        }
        KhoaHoc kh = listKhoaHoc.get(dong);
        ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
        daoKhoaHoc.xoaTamThoi("0", kh.getMaKH() + "");
        fillTableKhoaHoc(cd.getMaCD() + "", "1");
        clear();
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        clear();
        btnInsert.setVisible(true);
    }//GEN-LAST:event_btnClearMouseClicked

    private void btnfisrtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnfisrtMouseClicked
        first();
    }//GEN-LAST:event_btnfisrtMouseClicked

    private void btnPrevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevMouseClicked
        prev();
    }//GEN-LAST:event_btnPrevMouseClicked

    private void btnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMouseClicked
        next();
    }//GEN-LAST:event_btnNextMouseClicked

    private void BtnLastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnLastMouseClicked
        last();
    }//GEN-LAST:event_BtnLastMouseClicked

    private void btnKhoiPhucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhoiPhucActionPerformed
        int dong = tblKhoaHoc.getSelectedRow();
        if (dong < 0) {
            Msgbox.alert(this, "Chọn khóa học cần khôi phục");
            return;
        }
        KhoaHoc kh = listKhoaHoc.get(dong);
        ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
        daoKhoaHoc.xoaTamThoi("1", kh.getMaKH() + "");
        Msgbox.alert(this, "Khôi phục thành công");
        fillTableKhoaHoc(cd.getMaCD() + "", "0");
        clear();
    }//GEN-LAST:event_btnKhoiPhucActionPerformed

    private void btnXoaHanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaHanMouseClicked
        if (tblKhoaHoc.getSelectedRow() < 0) {
            Msgbox.alert(this, "Chọn chuyên đề cần xóa");
            return;
        }
        delete();
    }//GEN-LAST:event_btnXoaHanMouseClicked

    private void btnKhoaHocHTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKhoaHocHTMouseClicked
        ChuyenDe cd = (ChuyenDe) (cboChuyenDe.getSelectedItem());
        if (cd != null) {
            fillTableKhoaHoc(cd.getMaCD(), "1");
            btnInsert.setVisible(true);
            btnUpdate.setVisible(true);
            btnDelete.setVisible(true);
            btnKhoiPhuc.setVisible(false);
        }

    }//GEN-LAST:event_btnKhoaHocHTMouseClicked

    private void btnKhoaHocDaXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKhoaHocDaXoaMouseClicked
        btnKhoiPhuc.setVisible(true);
        btnKhoaHocHT.setVisible(true);
        ChuyenDe cd = (ChuyenDe) (cboChuyenDe.getSelectedItem());
        if (cd != null) {
            fillTableKhoaHoc(cd.getMaCD().toString(), "0");
            btnInsert.setVisible(false);
            btnUpdate.setVisible(false);
            btnDelete.setVisible(false);
// System.out.println(Auth.user.isVaiTro());

        }

    }//GEN-LAST:event_btnKhoaHocDaXoaMouseClicked

    private void cboChuyenDeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChuyenDeItemStateChanged
        ChuyenDe cd = (ChuyenDe) (cboChuyenDe.getSelectedItem());
        if (cd != null) {
            ChuyenDe chuyende = daoChuyenDe.selectById(cd.getMaCD());
            txtChuyenDe.setText(cd.getTenCD());
            txtThoiLuong.setText(chuyende.getThoiLuong() + "");
            txtHocPhi.setText(chuyende.getHocPhi() + "");
            txtGhiChu.setText(chuyende.getTenCD());
            fillTableKhoaHoc(cd.getMaCD(), "1");
            clear();
            row = -1;
        }
        txtMaNV.setText(Auth.user.getMaNV());

    }//GEN-LAST:event_cboChuyenDeItemStateChanged

    private void btnKhoaHocDaXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhoaHocDaXoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnKhoaHocDaXoaActionPerformed
    public KhoaHoc getForm() {
        KhoaHoc kh = new KhoaHoc();
        ChuyenDe cd = (ChuyenDe) (cboChuyenDe.getSelectedItem());
        kh.setMaCD(cd.getMaCD());
        kh.setHocPhi(Float.parseFloat(txtHocPhi.getText()));
        kh.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));
        try {
            SimpleDateFormat formater = new SimpleDateFormat();
            formater.applyPattern("yyyy-MM-dd");
            Date ngayKG = formater.parse(txtNgayKG.getText());
            kh.setNgayKG(ngayKG);
            Date ngayTao = formater.parse(txtNgayTao.getText());
            kh.setNgayTao(ngayTao);
        } catch (Exception e) {
            Msgbox.alert(this, "Ngày theo định dạng:yyyy-MM-dd ");
        }

        kh.setGhiChu(txtGhiChu.getText());
        kh.setMaNV(txtMaNV.getText());

        return kh;
    }

    public void setForm(KhoaHoc kh) {
        txtGhiChu.setText(kh.getGhiChu());
        txtHocPhi.setText(kh.getHocPhi() + "");
        txtMaNV.setText(kh.getMaNV());
        txtNgayKG.setText(kh.getNgayKG() + "");
        txtNgayTao.setText(kh.getNgayTao() + "");
        txtThoiLuong.setText(kh.getThoiLuong() + "");
    }

    public void edit() {
        String makh = (String) tblKhoaHoc.getValueAt(this.row, 0);
        KhoaHoc kn = daoKhoaHoc.selectById(makh);
        this.setForm(kn);
        tabs.setSelectedIndex(0);
    }

    public void first() {
        this.row = 0;
        if (tblKhoaHoc.getRowCount() > 0) {
            KhoaHoc kh = listKhoaHoc.get(row);
            setForm(kh);
        }

    }

    public void prev() {
        if (this.row > 0) {
            this.row--;
            KhoaHoc kh = listKhoaHoc.get(row);
            setForm(kh);
        }
    }

    public void next() {
        if (this.row < tblKhoaHoc.getRowCount() - 1) {
            this.row++;
            KhoaHoc kh = listKhoaHoc.get(row);
            setForm(kh);
        }
    }

    public void last() {
        this.row = tblKhoaHoc.getRowCount() - 1;
        if (tblKhoaHoc.getRowCount() > 0) {
            KhoaHoc kh = listKhoaHoc.get(row);
            setForm(kh);
        }

    }

    public void clear() {
        txtNgayKG.setText("");
    }

    public void insert() {
        try {
            KhoaHoc kh = getForm();
            daoKhoaHoc.insert(kh);
            ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
            fillTableKhoaHoc(cd.getMaCD(), "1");
            Msgbox.alert(this, "Thêm mới thành công");
            clear();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void update() {
        try {
            int dong = -1;
            dong = tblKhoaHoc.getSelectedRow();
            if (dong < 0) {
                Msgbox.alert(this, "Chọn khóa học để cập nhật");
                return;
            }
            KhoaHoc kh = listKhoaHoc.get(dong);
            daoKhoaHoc.update(kh);
            ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
            Msgbox.alert(this, "Cập nhật thành công");
            fillTableKhoaHoc(cd.getMaCD(), "1");
            clear();
        } catch (Exception e) {
            Msgbox.alert(this, "Lỗi truy vấn");
        }
    }

    public void delete() {
        if (!Auth.isManager()) {
            Msgbox.alert(this, "Đăng nhập với tài khoản Admin để xóa");
            return;
        }
        try {
            int dong = tblKhoaHoc.getSelectedRow();
            if (dong < 0) {
                Msgbox.alert(this, "Chọn khóa học cần xóa vĩnh viễn");
                return;
            }
            KhoaHoc kh = listKhoaHoc.get(dong);
            daoKhoaHoc.delete(kh.getMaKH() + "");
            Msgbox.alert(this, "Xóa thành công");
            ChuyenDe cd = (ChuyenDe) cboChuyenDe.getSelectedItem();
            this.fillTableKhoaHoc(cd.getMaCD(), "1");
            clear();
        } catch (Exception e) {
//            Msgbox.alert(this, "Lỗi truy vấn");
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnLast;
    private javax.swing.JLabel btnClear;
    private javax.swing.JLabel btnDelete;
    private javax.swing.JLabel btnInsert;
    private javax.swing.JToggleButton btnKhoaHocDaXoa;
    private javax.swing.JToggleButton btnKhoaHocHT;
    private javax.swing.JToggleButton btnKhoiPhuc;
    private javax.swing.JLabel btnNext;
    private javax.swing.JLabel btnPrev;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.JLabel btnXoaHan;
    private javax.swing.JLabel btnfisrt;
    private javax.swing.JComboBox<Object> cboChuyenDe;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChuyenDe;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblHocPhi;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgayKG;
    private javax.swing.JLabel lblNgayTao;
    private javax.swing.JLabel lblThoiLuong;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlList;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTextField txtChuyenDe;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtNgayKG;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables
}
